name: 🐳 Docker Hub Build & Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🔍 Show deployment info
      run: |
        echo "🔗 Repository: ${{ github.repository }}"
        echo "🌿 Branch: ${{ github.ref_name }}"
        echo "📝 Commit: ${{ github.sha }}"
        echo "👤 Actor: ${{ github.actor }}"

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔑 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 📋 Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/nitp-website
        tags: |
          type=raw,value=latest
          type=sha,prefix=

    - name: 🔨 Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🚀 Deploy to Server (optional)
      if: ${{ vars.ENABLE_SERVER_DEPLOY == 'true' }}
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          set -e
          
          # Configuration
          APP_NAME="nitp-website"
          APP_PORT="3002"
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/nitp-website:latest"
          
          echo "🔄 Pulling latest Docker image..."
          sudo docker pull $IMAGE_NAME
          
          echo "🛑 Stopping old container if exists..."
          sudo docker stop $APP_NAME 2>/dev/null || true
          sudo docker rm $APP_NAME 2>/dev/null || true
          
          echo "🚀 Starting new container..."
          sudo docker run -d --restart=always -p $APP_PORT:3002 --name $APP_NAME $IMAGE_NAME
          
          echo "🧹 Cleaning up old images..."
          sudo docker system prune -f
          
          echo "✅ Deployment complete!"
